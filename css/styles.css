@font-face {
    font-family: codefont;
    src: url('../fonts/SourceCodePro-LightItalic.ttf');
    font-weight: 400;
    font-style: normal;
}

@font-face {
    font-family: signika-b;
    src: url('../fonts/Signika-Bold.ttf');
    font-weight: 400;
    font-style: normal;
}

@font-face {
    font-family: signika-l;
    src: url('../fonts/Signika-Light.ttf');
    font-weight: 400;
    font-style: normal;
}

:root {
    --dark-background: #2D2A2E;
    --light-background: #ffffff;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    background-color: var(--light-background);
}


/* ! ======================== HEADER ======================== ! */

.header {
    display: flex;
    flex-direction: row;
    justify-content: center;
    border-radius: 0 0 60% 60%;
    padding-top: 1vw;
    padding-bottom: 2vw;
    background-color: #071013;
    animation: flyinY 2s ease-in-out;
}

@keyframes flyinY {
	0% {
		transform: translateY(-40vh);
	}
	100% {
		transform: translateY(0);
	}
}

.profile_image {
    display: block;
}

#pimage {
    border-radius: 50%;
    border: rgba(179, 179, 179, 0.5) 0.2vw double;
    width: 15vw;
    height: 15vw;
}

.htext {
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
    width: 40vw;
    margin-top: 5vw;
    margin-left: 2vw;
}

.typed {
    display: inline-block;
    overflow: hidden;
    font-size: 2vw;
    border-right: 0.2vw solid aliceblue;
    font-family: codefont !important;
    white-space: nowrap;
    width: -moz-fit-content;
    width: fit-content;
    animation: blink 0.7s infinite;
}

@keyframes blink {
    from { border-color: transparent; }
    to { border-color: aliceblue; }
}

.func {
    color: #A9DC76;
}

.paran {
    color: #FF6188;
}

.typed pre {
    display: inline-block;
}

.str {
    color: #FFD866;
}

.social_links {
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    align-items: center;
    padding-left: 0.5vw;
    padding-bottom: 2vw;
}

#linkedin {
    display: inline-block;
    width: 40px;
    height: 40px;
    margin-right: 0.3vw;
}

#github {
    display: inline-block;
    filter: invert(100);
    width: 28px;
    height: 28px;
}

/* ! ======================== TIMELINE ======================== ! */

.timeline {
    margin-top: 2.5vw;
}

.card {
    position: relative;
    display: flex;
    justify-content: flex-start;
    align-items: center;
    margin: auto;
    border-radius: 50px;
    width: 90vw;
}

.illustration {
    width: 35vw;
    height: 35vw;
}

.card_text {
    display: flex;
    flex-direction: column;
    align-items: center;

    width: 100%;
}

.card:nth-child(1) {
    background-image: url("../images/bg_green.png");
}

.card:nth-child(2) {
    background-image: url("../images/bg_blue.png");
}

.card:nth-child(3) {
    background-image: url("../images/bg_pink.png");
}

.card:nth-child(4) {
    background-image: url("../images/bg_yellow.png");
}

.title {
    font-size: 4vw;
    font-family: signika-b;
    color: var(--dark-background);
    text-align: left;
    width: 70%;
}

.content {
    font-size: 1.5vw;
    font-family: signika-l;
    text-align: justify;
    overflow: visible;

    padding: 0.5vw;
    margin-top: 0.5vw;
    width: 70%;
}

/* setting padding based on even or odd */
.card:nth-child(odd) {
    padding: 30px 0 30px 30px;
    flex-direction: row;
}
.card:nth-child(even) {
    padding: 30px 30px 30px 0;
    flex-direction: row-reverse;
}
/* Global ::before */
.card::before {
    content: "";
    position: absolute;
    width: 50%;
    border: dashed #A2A7A5;
}

/* Setting the border of top, bottom, left */
.card:nth-child(odd)::before {
    left: 0px;
    top: -4.5px;
    bottom: -4.5px;
    border-width: 5px 0 5px 5px;
    border-radius: 50px 0 0 50px;
}

/* Setting the top and bottom to "-5px" because earlier it was out of a pixel in mobile devices */
@media only screen and (max-width: 400px) {
.card:nth-child(odd)::before {
    top: -5px;
    bottom: -5px;
}
}

/* Setting the border of top, bottom, right */
.card:nth-child(even)::before {
    right: 0;
    top: 0;
    bottom: 0;
    border-width: 5px 5px 5px 0;
    border-radius: 0 50px 50px 0;
}

/* Removing the border if it is the first card */
.card:first-child::before {
    border-top: 0;
    border-top-left-radius: 0;
}

/* Removing the border if it is the last card  and it's odd */
.card:last-child:nth-child(odd)::before {
    border-bottom: 0;
}

/* Removing the border if it is the last card  and it's even */
.card:last-child:nth-child(even)::before {
    border-bottom: 0;
}

/* Information about the timeline */
.info {
    display: flex;
    flex-direction: column;
    background: #333;
    color: gray;
    border-radius: 10px;
    padding: 10px;
}

.title::before {
    content: "";
    position: absolute;
    width: 10px;
    height: 10px;
    background: white;
    border-radius: 999px;
    border: 3px solid;
}

.card:nth-child(1) .card_text .title::before {
    border-color: #A9DC76;
}

.card:nth-child(2) .card_text .title::before {
    border-color: #5FBFF9;
}

.card:nth-child(3) .card_text .title::before {
    border-color: #FF6188;
}

.card:nth-child(4) .card_text .title::before {
    border-color: #FFD866;
}

/* text right if the card is even  */
.card:nth-child(even) > .info > .title {
text-align: right;
}

/* setting dot to the left if the card is odd */
.card:nth-child(odd) > .info > .title::before {
left: -45px;
}

/* setting dot to the right if the card is odd */
.card:nth-child(even) > .info > .title::before {
right: -45px;
}



/* ! ======================== HEADER ======================== ! */